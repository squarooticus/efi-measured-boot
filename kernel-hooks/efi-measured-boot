#! /bin/sh
set -e

cmd=$0
arg1=$1

if ! which update-emboot >/dev/null 2>&1; then
    PATH=$PATH:/usr/local/bin:/usr/local/sbin
    export PATH
    which update-emboot >/dev/null 2>&1 || exit 0
fi

if type systemd-detect-virt >/dev/null 2>&1 &&
   systemd-detect-virt --quiet --container; then
	exit 0
fi

eval set -- $DEB_MAINT_PARAMS
mode="${1#\'}"
mode="${mode%\'}"
case $cmd:$mode:$DPKG_MAINTSCRIPT_PACKAGE in
    */postinst.d/*::*|*/postinst.d/*:configure:*)
        exec update-emboot ${krel:+-k "$krel"}
	;;
    */postrm.d/*::*|*/postrm.d/*:remove:*)
        krel=$arg1
        if [ -n "$krel" ]; then
            set +e
            update-emboot ${krel:+-r -k "$krel"}
            rc=$?
            if [ "$rc" -ne 0 ]; then
                echo "update-emboot failed with exit code $rc" >&2
                echo "WARNING: token removal failed for $krel" >&2
            fi
            update-emboot -i
            rc=$?
            if [ "$rc" -ne 0 ]; then
                echo "update-emboot failed with exit code $rc" >&2
                echo "WARNING: monotonic counter may have failed to increment" >&2
            fi
        else
            echo "WARNING: kernel release not specified for removal operation" >&2
        fi
	;;
    */post-update.d/*:*:|*/post-update.d/*:*:*)
        krel=$arg1
        set +e
        update-emboot ${krel:+-k "$krel"} ${EMBOOT_KERNEL_HOOK_NO_SEAL:+-S}
        rc=$?
        if [ "$rc" -ne 0 ]; then
            echo "update-emboot failed with exit code $rc" >&2
            echo "WARNING: emboot EFI entries may be unbootable!" >&2
        fi
        ;;
esac

exit 0
